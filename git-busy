#!/bin/bash
source "$(git --exec-path)/git-sh-setup"
require_work_tree

if git config --get-colorbool color.branch; then
    color='--color=always'
    color_reset="$(git config --get-color '' 'reset')"
    color_branch="$(git config --get-color 'color.branch.local' 'cyan')"
    color_current="$(git config --get-color 'color.branch.current' 'green')"
else
    color=''
    color_reset=''
    color_branch=''
    color_current=''
fi

check_busy() {
    target="$1"
    header=''
    git for-each-ref --format='%(refname)' "refs/heads/*/${target}/[0-9]*" | while read branch; do
        commits=$(git log --oneline "^${target}" "${branch}" -- | wc -l)
        if test $commits -gt 0; then
            if test -z "$header"; then
                header='true'
                echo "Outstanding against ${color_current}$target${color_reset}"
                echo "--------------------${target//?/-}"
            fi

            echo " * ${color_branch}${branch#refs/heads/}${color_reset}"

            git log -5 ${color} --oneline "^${target}" "${branch}" -- | \
                while read log; do echo " - $log"; done

            if test $commits -gt 5; then
                echo " + $((commits-5)) more changes not shown..."
            fi
            echo ''
        fi
    done
    test -n "$header" && echo ""
}

for branch in master next 2.6.x 2.6.next; do
    check_busy "$branch"
done